// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id         Int       @id @default(autoincrement())
  email      String    @unique
  password   String
  role       Role      @default(USER)
  warnings   Int?
  banned     Boolean   @default(false)
  money      BigInt    @default(0)
  friends    Float     @default(0)
  signal     Bytes?
  parameters Json      @default("{}")
  posts      Post[]
  Blog       Blog[]
  profile    Profile?
  service    Service[]
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  gender Gender
  user   User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int     @unique
}

enum Gender {
  MALE
  FEMALE
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String   @unique @db.VarChar(255)
  createdAt DateTime @default(now())
  imprint   String   @default(uuid())
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
  blog      Blog     @relation(fields: [blogId], references: [id], onDelete: Cascade)
  blogId    Int
}

model Blog {
  id       Int    @id @default(autoincrement())
  title    String @unique @db.VarChar(255)
  imprint  String @default(cuid())
  author   User?  @relation(fields: [userId], references: [id])
  priority Int    @default(1)
  category String @default("normal")
  posts    Post[]
  userId   Int?

  @@unique([userId, category], name: "blogByUserAndCategory")
}

model Service {
  name   String
  user   User   @relation(fields: [userId], references: [id])
  userId Int

  @@id([userId, name], name: "compositeId")
}
